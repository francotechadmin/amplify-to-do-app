# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

type Todo @model @auth(rules: [{ allow: owner }]) {
  id: ID! @primaryKey
  content: String!
  isCompleted: Boolean!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  userID: ID! @index(name: "byUser", sortKeyFields: ["createdAt"])
}

type User
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read] }
      { allow: public, provider: iam, operations: [read, update] }
    ]
  ) {
  id: ID!
  subscriptionStatus: String! # active, inactive, or null
  todos: [Todo] @hasMany(fields: ["id"]) # A user can have many todos
}
input UpdateUserSubscriptionInput {
  id: ID!
  subscriptionStatus: String!
}

type Mutation {
  createCheckoutSession(input: CreateCheckoutSessionInput!): CheckoutSession
    @function(name: "createCheckoutSession-${env}")
  generateAiTodos(input: GenerateAiTodosInput!): GeneratedTasksPayload
    @function(name: "generateAiTodos-${env}")
    @auth(rules: [{ allow: private }])
  batchCreateTodos(input: BatchCreateInput!): [Todo]
    @function(name: "generalTodoResolver-${env}")
    @auth(rules: [{ allow: private }])
  batchReplaceTodos(input: BatchCreateInput!): [Todo]
    @function(name: "generalTodoResolver-${env}")
    @auth(rules: [{ allow: private }])
  clearTodos: [Todo]
    @function(name: "generalTodoResolver-${env}")
    @auth(rules: [{ allow: private }])
}

input CreateCheckoutSessionInput {
  planId: String!
  userId: String!
  email: String!
}

type CheckoutSession {
  id: String!
}

input GenerateAiTodosInput {
  userId: ID!
  prompt: String!
}

# Returns array of strings
type GeneratedTasksPayload {
  tasks: [String]
}

input BatchCreateInput {
  todos: [CreateTodoInput!]!
}

input CreateTodoInput {
  id: ID
  content: String!
  isCompleted: Boolean!
  userID: ID!
}

input BatchReplaceInput {
  todos: [UpdateTodoInput!]!
}

input UpdateTodoInput {
  id: ID!
  content: String
  isCompleted: Boolean
  userID: ID
}
