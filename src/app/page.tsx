"use client";
import { useState } from "react";

import "@aws-amplify/ui-react/styles.css";
import { Amplify } from "aws-amplify";
import config from "../aws-exports"; // This file is generated by Amplify CLI.
import { signOut } from "aws-amplify/auth";

const libraryOptions = {
  ssr: true,
};

Amplify.configure({ ...config, ...libraryOptions });

import { withAuthenticator } from "@aws-amplify/ui-react";

function Home() {
  const [tasks, setTasks] = useState<string[]>([]);
  const [newTask, setNewTask] = useState("");

  const handleAddTask = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (newTask.trim() === "") return;
    setTasks([...tasks, newTask]);
    setNewTask("");
  };

  const handleRemoveTask = (index: number) => {
    const updatedTasks = tasks.filter((_, i) => i !== index);
    setTasks(updatedTasks.filter((task): task is string => task !== null));
  };

  const handleClearTasks = () => {
    setTasks([]);
  };

  const handleEditTask = (index: number) => {
    const updatedTasks = tasks.map((task, i) => {
      if (i === index) {
        return prompt("Edit task", task);
      }
      return task;
    });

    if (updatedTasks.some((task) => task === null || !task)) return;
    setTasks(updatedTasks.filter((task): task is string => task !== null));
  };

  return (
    <div className="grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]">
      <main className="flex flex-col gap-8 row-start-2 items-center sm:items-start">
        <h1 className="text-4xl font-bold">To-Do List</h1>
        <form className="flex gap-4" onSubmit={handleAddTask}>
          <input
            type="text"
            placeholder="Add a new task"
            value={newTask}
            onChange={(e) => setNewTask(e.target.value)}
            className="border border-gray-300 p-2 rounded text-black"
          />
          <button type="submit" className="bg-blue-500 text-white p-2 rounded">
            Add
          </button>
        </form>
        <ul className="list-disc pl-5">
          {tasks.length === 0 ? (
            <p className="text-gray-500">No tasks added yet.</p>
          ) : (
            tasks.map((task, index) => (
              <li
                key={index}
                className="p-2 flex items-center justify-between w-full sm:w-auto"
              >
                <span>{task}</span>
                <button
                  onClick={() => handleEditTask(index)}
                  className="pl-4 text-blue-500 hover:underline"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleRemoveTask(index)}
                  className="text-red-500 hover:underline ml-4"
                >
                  Delete
                </button>
              </li>
            ))
          )}
          {tasks.length > 0 && (
            <button
              onClick={handleClearTasks}
              className="text-red-500 hover:underline mt-4"
            >
              Clear all tasks
            </button>
          )}
        </ul>
      </main>
      <footer className="row-start-3 text-center text-gray-500">
        <p>
          Created by{" "}
          <a
            target="_blank"
            href="https://github.com/francotechadmin"
            className="text-blue-500"
          >
            Gabriel Franco
          </a>
        </p>
        {/* sign out */}
        <button
          onClick={() => signOut()}
          className="text-red-500 hover:underline mt-4"
        >
          Sign out
        </button>
      </footer>
    </div>
  );
}

export default withAuthenticator(Home);
